[Target]
#include <iostream>
using namespace std;
int binarySearch(int interviewRoom[], int l, int r, int x) 
{ 
   if (r >= l) 
   { 
        int mid = l + (r - l)/2; 
        if (interviewRoom[mid] == x)   
            return mid; 
        if (interviewRoom[mid] > x)  
            return binarySearch(interviewRoom, l, mid-1, x); 
        return binarySearch(interviewRoom, mid+1, r, x); 
   } 
   return -1; 
} 
int main(void) 
{ 
   int interviewRoom[] = {1503, 1500, 1509, 1502, 1506, 1510}; 
   int n = sizeof(interviewRoom)/ sizeof(interviewRoom[0]); 
   int x = 1509; 
   int result = binarySearch(interviewRoom, 0, n-1, x); 
   if (result == -1)
   cout << ("Room is not on this floor") << endl;
   else
   cout << ("Room is on your right, door #") << result << endl;
   return 0; 
} 

[Available]
6
8
10
int mid = (l+r)/2;
return l;
return binarySearch(interviewRoom, r, mid, x);

cout << "Purpose of parking: " << purpose << "\n";
[Current]
0
1
2
3
4
5
7
9
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
[Instructions]
You have reached the 15th floor. Using a recursive 
binary search, find out if the interview 
room, 1509 is on this floor. Expected output:
"Room is on your right, door #2" 

